<?xml version="1.0" encoding="UTF-8"?>
<project name="evolutionchamber" default="all" basedir=".">
	<description>
	</description>

	<!-- =================================================================== -->
	<!-- Helper tasks                                                        -->
	<!-- =================================================================== -->

	<macrodef name="proppath" description="set a property to a path if it exists">
		<attribute name="name"/>
		<attribute name="path"/>
		<attribute name="else" default="."/>
		<attribute name="type" default="dir"/>
		<sequential>
			<condition property="@{name}" value="@{path}" else="@{else}">
				<available file="@{path}" type="@{type}"/>
			</condition>
		</sequential>
	</macrodef>

	<!-- =================================================================== -->
	<!-- Global properties                                                   -->
	<!-- =================================================================== -->

	<!-- user overrides (properties are immutable, so set overrides first) -->
	<property file="override.properties"/>
	<property file="build.properties"/>
	<proppath name="java.class.dir" path="${java.class.dir.user}" else="${java.home}/lib"/>
	<property name="project.mainclass" value="com.fray.evo.ui.swingx.EcSwingX"/>

	<property name="main.src" value="src/java"/>
	<property name="main.make" value="build/main"/>
	<property name="main.dst" value="dist"/>

	<property name="test.src" value="test"/>
	<property name="test.make" value="build/test"/>
	<property name="test.dst" value="run"/>

	<property name="doc.dst" value="site"/><!-- UNUSED -->
	<property name="doc.api" value="site/api"/>

	<property name="lib" value="lib"/>
	<path id="lib.path">
		<fileset id="lib.path.dev" dir="${lib}" includes="**/*.jar"/>
		<fileset id="lib.path.usr" dir="${java.class.dir}">
			<!-- possible names of jars that hold our dependencies -->
			<include name="junit.jar"/>
			<include name="commons-collections3.jar"/>
			<include name="swingx.jar"/>
			<include name="swingx-beaninfo.jar"/>
			<include name="looks.jar"/>
		</fileset>
	</path>

	<assertions><enable/></assertions>

	<!-- set version string based on git-describe -->
	<exec executable="git" failifexecutionfails="false"
		errorProperty="git.errror" outputproperty="git.describe" resultproperty="git.result">
		<arg value="describe" />
		<arg value="--always" />
		<arg value="--abbrev=4" />
	</exec>
	<condition property="git.revision" value="${git.describe}" else="@unknown@">
		<and>
			<equals arg1="${git.result}" arg2="0" />
			<isset property="git.describe" />
		</and>
	</condition>

	<!-- =================================================================== -->
	<!-- Miscellaneous                                                       -->
	<!-- =================================================================== -->

	<target name="dist" depends="clean-all, all" description="clean-build everything"/>

	<target name="all" depends="package, doc" description="build everything, incl. docs"/>

	<target name="clean-all" depends="clean, clean-doc" description="clean all build products, incl. docs"/>

	<target name="debug">
		<echoproperties/>
	</target>

	<!-- =================================================================== -->
	<!-- Library dependencies                                                -->
	<!-- =================================================================== -->

	<target name="env">
		<available property="lib.junit.present" classname="junit.framework.Test" classpathref="lib.path"/>
		<available property="lib.swingx.present" classname="org.jdesktop.swingx.JXPanel" classpathref="lib.path"/>
		<available property="lib.jgap.present" classname="org.jgap.Gene" classpathref="lib.path"/>
	</target>

	<target name="libdep-junit" depends="env" unless="${lib.junit.present}">
		<fail message="JUnit not available"/>
	</target>

	<target name="libdep-swingx" depends="env" unless="${lib.swingx.present}">
		<fail message="SwingX not available"/>
	</target>

	<target name="libdep-jgap" depends="env" unless="${lib.jgap.present}">
		<fail message="JGAP not available"/>
	</target>

	<!-- =================================================================== -->
	<!-- Standard build                                                      -->
	<!-- =================================================================== -->

	<target name="init">
		<mkdir dir="${main.make}"/>
		<mkdir dir="${main.dst}"/>
		<mkdir dir="${test.make}"/>
		<mkdir dir="${test.dst}"/>
	</target>

	<target name="dep" depends="libdep-swingx, libdep-jgap"/>

	<target name="build" depends="init, dep">
		<tstamp/>
		<javac srcdir="${main.src}" destdir="${main.make}" debug="on" optimize="on" source="1.5" target="1.5">
			<compilerarg line="${javac.args}"/>
			<classpath refid="lib.path"/>
			<include name="**/*.java"/>
			<exclude name="**/package-info.java"/>
		</javac>
	</target>

	<target name="package" depends="build, unit" description="build standard binary packages" >
		<jar jarfile="${main.dst}/${ant.project.name}.jar" basedir="${main.make}">
			<manifest>
				<attribute name="Main-Class" value="${project.mainclass}"/>
				<attribute name="Class-Path" value="commons-collections-3.2.jar jgap.jar swingx-core-1.6.2.jar looks-2.1.4.jar"/>
			</manifest>
		</jar>
		<jar jarfile="${main.dst}/${ant.project.name}-nodep.jar" basedir="${main.make}">
			<manifest>
				<attribute name="Main-Class" value="${project.mainclass}"/>
				<attribute name="Class-Path" value="commons-collections-3.2.jar jgap.jar swingx-core-1.6.2.jar looks-2.1.4.jar"/>
			</manifest>
			<zipgroupfileset refid="lib.path.dev"/>
			<zipgroupfileset refid="lib.path.usr"/>
		</jar>
	</target>

	<target name="run" depends="package" description="run the packaged program">
		<java classname="${project.mainclass}" fork="true" dir="${test.dst}">
			<classpath>
				<pathelement path="${main.dst}/${ant.project.name}.jar"/>
				<path refid="lib.path"/>
			</classpath>
		</java>
	</target>

	<target name="test-new" depends="package" description="test the new all-races model">
		<java classname="sc2.SC2Main" fork="true" dir="${test.dst}">
			<classpath>
				<pathelement path="${main.dst}/${ant.project.name}.jar"/>
				<path refid="lib.path"/>
			</classpath>
		</java>
	</target>

	<target name="unit-build" depends="build, libdep-junit" unless="${test.skip}">
		<!-- no tests yet -->
	</target>

	<target name="unit" depends="unit-build" unless="${test.skip}">
		<!-- no tests yet -->
	</target>


	<target name="clean" description="clean standard build products">
		<delete dir="${main.make}"/>
		<delete dir="${main.dst}"/>
		<delete dir="${test.make}"/>
		<delete dir="${test.dst}"/>
	</target>

	<!-- =================================================================== -->
	<!-- Documentation                                                       -->
	<!-- =================================================================== -->

	<target name="init-doc">
		<mkdir dir="${doc.api}"/>
	</target>

	<target name="javadoc" depends="init-doc, dep" unless="${doc.skip}">
		<javadoc classpathref="lib.path" sourcepath="${main.src}" destdir="${doc.api}" use="true">
			<fileset dir="${main.src}" includes="**/*.java" />
			<classpath refid="lib.path"/>
			<link href="http://download.oracle.com/javase/6/docs/api"/>
		</javadoc>
	</target>

	<target name="doc" depends="javadoc" description="build documentation">
		<!-- currently we have no other documentation apart from javadocs -->
	</target>

	<target name="clean-doc" unless="${doc.skip}">
		<delete dir="${doc.api}"/>
	</target>

</project>
